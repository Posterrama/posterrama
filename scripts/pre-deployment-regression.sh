#!/bin/bash

# Pre-deployment Regression Test Suite
# Voert kritieke regressie tests uit voordat deployment

set -e  # Exit bij eerste error

echo "🔍 Pre-deployment Regression Test Suite"
echo "======================================="

# Kleuren voor output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Functie voor status reporting
report_status() {
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}✅ $1 PASSED${NC}"
    else
        echo -e "${RED}❌ $1 FAILED${NC}"
        exit 1
    fi
}

# Functie voor waarschuwingen
warn() {
    echo -e "${YELLOW}⚠️  $1${NC}"
}

# Functie voor info
info() {
    echo -e "${BLUE}ℹ️  $1${NC}"
}

echo ""
info "Stap 1: Quick Health Check"
echo "-------------------------"
npm run health
report_status "Health Check"

echo ""
info "Stap 2: API Contract Validation"
echo "------------------------------"
npm run test:regression:contracts
report_status "API Contract Tests"

echo ""
info "Stap 3: Critical Path E2E Tests"
echo "------------------------------"
npm run test:regression:e2e
report_status "Critical Path Tests"

echo ""
info "Stap 4: Performance Baseline Check"
echo "---------------------------------"
# Run een subset van performance gevoelige tests
timeout 60s npm test -- --testNamePattern="Performance|performance|regression" --maxWorkers=1 --silent
if [ $? -eq 124 ]; then
    warn "Performance tests timed out after 60s - possible regression"
else
    report_status "Performance Baseline"
fi

echo ""
info "Stap 5: Configuration Validation"
echo "-------------------------------"
npm run config:validate
report_status "Configuration Validation"

echo ""
info "Stap 6: Dependencies Security Check"
echo "----------------------------------"
npm run deps:security-audit
report_status "Security Audit"

# Generate regression report
REPORT_FILE="regression-report-$(date +%Y%m%d-%H%M%S).txt"
echo ""
info "Generating regression report: $REPORT_FILE"

cat > "$REPORT_FILE" << EOF
Posterrama Pre-deployment Regression Report
==========================================
Date: $(date)
Git Commit: $(git rev-parse HEAD 2>/dev/null || echo "N/A")
Git Branch: $(git branch --show-current 2>/dev/null || echo "N/A")

Test Results:
✅ Health Check: PASSED
✅ API Contract Tests: PASSED  
✅ Critical Path Tests: PASSED
✅ Performance Baseline: PASSED
✅ Configuration Validation: PASSED
✅ Security Audit: PASSED

Next Steps:
1. Review any warnings above
2. If all tests pass, deployment is safe to proceed
3. Monitor post-deployment for any issues

Report generated by: scripts/pre-deployment-regression.sh
EOF

echo -e "${GREEN}"
echo "🎉 ALL REGRESSION TESTS PASSED!"
echo "===============================}"
echo -e "${NC}"
echo "✅ API contracts maintained"
echo "✅ Critical paths functional"  
echo "✅ Performance within baselines"
echo "✅ Configuration valid"
echo "✅ Security checks passed"
echo ""
echo "📄 Full report saved to: $REPORT_FILE"
echo ""
echo -e "${GREEN}🚀 SAFE TO DEPLOY${NC}"