# -----------------------------------------------------------------------------
# Environment variables for posterrama.app
#
# Copy this file to a new file named .env in the same directory.
# Then, fill in the values for your specific environment.
#
# IMPORTANT: The .env file contains sensitive information and should NEVER
# be committed to version control. The .gitignore file is already configured
# to ignore it.
# -----------------------------------------------------------------------------

# --- Application Server Configuration (Optional) ---

# The port on which the web server will run. Defaults to 4000 if not set.
SERVER_PORT=4000

# Optional: Override timezone for clock widget ("auto" uses browser/IP inference)
# CLOCK_TIMEZONE=Europe/Amsterdam

# Node environment: production | development | test
# Affects logging verbosity and certain safety checks.
NODE_ENV=production

# Set to 'true' to enable verbose logging for debugging. Defaults to 'true'.
DEBUG=true

# Fine-grained logging controls (optional)
# Overall logger level for server logs (default 'info'). Accepts: error, warn, info, debug
# LOG_LEVEL=info
# Allow complete silence in test runs (test-only)
# TEST_SILENT=false
#
# Level for routine API access logs (default 'debug'). Accepts: debug, info, warn
# API_REQUEST_LOG_LEVEL=debug
# Sample rate for API access logs (0..1). Example: 0.1 logs ~10% of requests
# API_REQUEST_LOG_SAMPLE=0

# Slow request warning thresholds (milliseconds)
# Overall HTTP request slow threshold (default 3000ms)
# SLOW_REQUEST_WARN_MS=3000
# Plex connectivity slow threshold (default 3000ms)
# PLEX_SLOW_WARN_MS=3000
# Jellyfin connectivity slow threshold (default 3000ms)
# JELLYFIN_SLOW_WARN_MS=3000

# Level for successful Plex connection test logs (default 'debug').
# PLEX_TEST_LOG_LEVEL=debug

# Level for successful Jellyfin connection test logs (default 'debug').
# JELLYFIN_TEST_LOG_LEVEL=debug

# Include detailed health checks (which may probe Plex/Jellyfin) in the
# dashboard metrics endpoint. Default is ENABLED.
# Set to 'false' to disable.
# DASHBOARD_INCLUDE_DETAILED_HEALTH=false

# Control which sections are included in the dashboard health (defaults shown)
# Set to 'false' to disable a section (where default is true), or 'true' to enable (where default is false)
# DASHBOARD_INCLUDE_PERF_CHECK=true      # default true (disabled in tests)
# DASHBOARD_INCLUDE_DEVICE_SLA=true      # default true (disabled in tests)
# DASHBOARD_INCLUDE_JELLYFIN=true        # default true (disabled in tests)
# DASHBOARD_INCLUDE_TMDB=false           # default false
# DASHBOARD_INCLUDE_TVDB=false           # default false

# Extend dashboard health to include update availability (GitHub). Default: disabled.
# DASHBOARD_INCLUDE_UPDATE_CHECK=false

# Include server cache efficiency metric in dashboard health. Default: disabled.
# When enabled, shows hit/miss rate for server-side response caching across all requests.
# Note: can appear low if many endpoints are uncached, unique queries are common,
# or 304/validation responses arenâ€™t counted as hits.
# DASHBOARD_INCLUDE_CACHE_EFFICIENCY=false

# Device SLA thresholds for stale heartbeats (minutes). Defaults: warn=5, error=30
# DEVICE_SLA_WARN_MIN=5
# DEVICE_SLA_ERROR_MIN=30

# Cache efficiency alert thresholds (percent). Warn when hitRate < 70, error when < 40.
# Only evaluated after at least CACHE_MIN_REQUESTS requests (default 50)
# CACHE_HITRATE_WARN=70
# CACHE_HITRATE_ERROR=40
# CACHE_MIN_REQUESTS=50

# Performance alert thresholds
# P95_WARN_MS=1200
# P95_ERROR_MS=3000
# ERROR_RATE_WARN=5
# ERROR_RATE_ERROR=15

# Internal debugging switches (use only when diagnosing issues)
# PRINT_AUTH_DEBUG=0       # set to '1' to dump extra auth debug in tests/dev
# RATE_LIMIT_TEST=normal   # 'strict' to simulate production-strict limits in tests

# --- Security & Session Configuration (Managed by the app) ---
# The following variables are typically generated and managed by the application itself.
# You usually do not need to set these manually.

# A secret key for signing session ID cookies.
# If left blank the application will generate one on first run (recommended for first deploy).
SESSION_SECRET=

# The username for the admin panel.
# This is set during the initial setup in the Admin panel.
ADMIN_USERNAME=

# The hashed password for the admin user.
# This is set during the initial setup in the Admin panel.
# Note: Passwords must be at least 8 characters long.
ADMIN_PASSWORD_HASH=

# The secret for Two-Factor Authentication (2FA).
# This is generated and set when you enable 2FA in the admin panel.
ADMIN_2FA_SECRET=

# A persistent token for accessing the Admin API from external scripts or tools.
# This is generated when you request one in the admin panel.
API_ACCESS_TOKEN=

# Optional: Path for storing device groups data. Default is ./groups.json in project root.
# You can set an absolute path or a path relative to the project root.
# GROUPS_STORE_PATH=groups.json

# Optional: Path for storing registered devices. Default is ./devices.json in project root.
# You can set an absolute path or a path relative to the project root.
# DEVICES_STORE_PATH=devices.json

# Enable device management endpoints (pairing, control).
# Default is enabled via config.json (deviceMgmt.enabled: true). Use this env var
# to override (set to 'false' to force off, or 'true' to force on).
# DEVICE_MGMT_ENABLED=true

# --- GitHub Integration & Auto-Update Configuration (Optional) ---
# These settings are used for the GitHub integration and automatic update functionality
# Leave blank to use defaults

# GitHub API settings (optional, uses public API by default)
# GITHUB_TOKEN=  # Optional: Personal access token for higher rate limits
# GITHUB_OWNER=Posterrama  # Repository owner (defaults to Posterrama)
# GITHUB_REPO=posterrama   # Repository name (defaults to posterrama)

# Auto-update settings
# AUTO_UPDATE_CHECK_INTERVAL=3600000  # Check for updates every hour (milliseconds)
# AUTO_UPDATE_ENABLED=true            # Enable automatic update checking
# BACKUP_RETENTION_DAYS=7             # Keep backups for 7 days
# UPDATE_DOWNLOAD_TIMEOUT=300000      # Download timeout (5 minutes)


# --- Media Server Configuration (Required for each enabled server) ---

# The following variables are for the first Plex server defined in config.json.
# The variable names (e.g., PLEX_HOSTNAME) must match the '*EnvVar' values
# in your config.json.

# The hostname or IP address of your Plex Media Server.
PLEX_HOSTNAME=192.168.1.100

# The port of your Plex server (default is 32400).
PLEX_PORT=32400

# Your personal Plex authentication token.
# https://support.plex.tv/articles/204059436-finding-an-authentication-token-x-plex-token/
PLEX_TOKEN=YourPlexTokenHere


# --- Jellyfin Media Server Configuration (Optional) ---

# The hostname or IP address of your Jellyfin Media Server.
JELLYFIN_HOSTNAME=192.168.1.101

# The port of your Jellyfin server (default is 8096).
JELLYFIN_PORT=8096

# Your Jellyfin API key.
# Generate one in Jellyfin Admin Dashboard > Advanced > API Keys
JELLYFIN_API_KEY=YourJellyfinApiKeyHere


# Optional: Jellyfin HTTP client diagnostics (default off)
# Set to 'true' for verbose per-request logging and masked tokens
# JELLYFIN_HTTP_DEBUG=false
# Alias for the same verbose logging toggle (either var enables it)
# DEBUG_JELLYFIN=false
# Set to 'true' to also log retry attempts (very noisy)
# JELLYFIN_RETRY_LOGS=false

# Use insecure HTTPS for Jellyfin (skip TLS verification). Only enable if you
# understand the risks (e.g., self-signed certs in a trusted network).
# JELLYFIN_INSECURE_HTTPS=false

# Optional: Identify the device in Jellyfin User-Agent and auth metadata
# POSTERRAMA_DEVICE_NAME=Posterrama
# POSTERRAMA_DEVICE_ID=


# --- Startup Tuning (Optional) ---
# Maximum time to wait for the initial playlist fetch before starting the server (ms).
# Server will start after this timeout and continue the fetch in the background.
# STARTUP_FETCH_TIMEOUT_MS=12000


# --- Example for a Second Media Server (Optional) ---
#
# If you add a second server in config.json, you must add its environment
# variables here. For example, if your config.json has:
#
#   "name": "Plex Server 2",
#   "hostnameEnvVar": "PLEX2_HOSTNAME",
#   "portEnvVar": "PLEX2_PORT",
#   "tokenEnvVar": "PLEX2_TOKEN"
#
# Then you would add the following lines to your .env file:
#
# PLEX2_HOSTNAME=192.168.1.101
# PLEX2_PORT=32400
# PLEX2_TOKEN=YourSecondPlexToken

# -----------------------------------------------------------------------------
# Additional Operational / Security Notes
# -----------------------------------------------------------------------------
# - ADMIN_FILTER_PREVIEW_TIMEOUT_MS controls how long the Admin filter preview
#   waits per source before timing out (default 8000 ms). Useful if a source is
#   slow and you prefer faster UI feedback.
# ADMIN_FILTER_PREVIEW_TIMEOUT_MS=8000
# - PERF_TRACE_ADMIN enables detailed performance tracing for the Admin filter
#   preview endpoint. When set to 'true', the server will log a compact summary
#   per request to the logs and add a Server-Timing header so you can inspect
#   timings in DevTools (Network > Headers). Keep disabled in production unless
#   actively investigating performance.
# PERF_TRACE_ADMIN=false
# - PLEX_PREVIEW_PAGE_SIZE controls the page size used during Plex filter preview
#   counting (default 200). Larger values reduce the number of requests but may
#   increase response payload per call. Tune based on your Plex server/network.
# PLEX_PREVIEW_PAGE_SIZE=200
# - JF_PREVIEW_PAGE_SIZE controls the page size used during Jellyfin filter preview
#   counting (default 1000). Decrease if your server struggles with large pages.
# JF_PREVIEW_PAGE_SIZE=1000
# - Set NODE_ENV=production in production environments.
# - SESSION_SECRET can be autogenerated but persisting it keeps sessions valid across restarts.
# - ADMIN_* values are managed through the setup flow; leave blank initially.
# - Do not commit the generated .env file.
# -----------------------------------------------------------------------------